#!/bin/bash

# Update package list
sudo apt update

# Install curl if not already installed
sudo apt install -y curl

# Download and install Node.js using NodeSource
curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
sudo apt install -y nodejs

# Verify installation
echo "Node.js and npm have been installed."
node -v
npm -v

# Create project directory
PROJECT_DIR=~/TestToken

if [ ! -d "$PROJECT_DIR" ]; then
    mkdir "$PROJECT_DIR"
    echo "Directory $PROJECT_DIR has been created."
else
    echo "Directory $PROJECT_DIR already exists."
fi

# Navigate to project directory
cd "$PROJECT_DIR" || exit

# Initialize NPM project
npm init -y
echo "NPM project has been initialized."

# Install Hardhat, Ethers.js, and OpenZeppelin
npm install --save-dev hardhat @nomiclabs/hardhat-ethers ethers @openzeppelin/contracts
echo "Hardhat, Ethers.js, and OpenZeppelin have been installed."

# Start Hardhat project
npx hardhat <<< "Create an empty hardhat.config.js"
echo "Hardhat project has been created with an empty configuration."

# Create contracts and scripts folders
mkdir contracts && mkdir scripts
echo "Folders 'contracts' and 'scripts' have been created."

# Create MyToken.sol file
cat <<EOL > contracts/MyToken.sol
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract MyToken is ERC20 {
    constructor(uint256 initialSupply) ERC20("Mytoken", "MTK") {
        _mint(msg.sender, initialSupply);
    }
}
EOL
echo "File 'MyToken.sol' has been created in the 'contracts' folder."

# Compile the contract
npx hardhat compile
echo "Contract has been compiled."

# Install dotenv package
npm install dotenv
echo "Dotenv package has been installed."

# Create .env file
touch .env
echo "File '.env' has been created in the project directory."

# Open .env file with nano
nano .env

# Prompt user to add private key
echo "Please add the following line to the .env file:"
echo "PRIVATE_KEY=your_exported_private_key"
echo "Once done, save and exit nano."

# Create .gitignore file
cat <<EOL > .gitignore
# Sample .gitignore code
# Node modules
node_modules

# Environment variables
.env

# Coverage files
coverage/
coverage.json

# Typechain generated files
typechain/
typechain-types/

# Hardhat files
cache/
artifacts/

EOL
echo "File '.gitignore' has been created with sample code."

# Create hardhat.config.js file
cat <<EOL > hardhat.config.js
/** @type import('hardhat/config').HardhatUserConfig */
require('dotenv').config()
require("@nomiclabs/hardhat-ethers");

module.exports = {
  solidity: "0.8.20",
  networks: {
    hemi: {
      url: "https://testnet.rpc.hemi.network/rpc",
      chainId: 743111,
      accounts: [\0x\${process.env.PRIVATE_KEY}\],
    },
  }
};
EOL
echo "File 'hardhat.config.js' has been filled with Hardhat configuration."

# Create deploy.js file in scripts folder
cat <<EOL > scripts/deploy.js
const { ethers } = require("hardhat");

async function main() {
    const [deployer] = await ethers.getSigners();
    const initialSupply = ethers.utils.parseUnits("1000", "ether");

    const Token = await ethers.getContractFactory("MyToken");
    const token = await Token.deploy(initialSupply);

    console.log("Token deployed to:", token.address);
}

main().catch((error) => {
    console.error(error);
    process.exit(1);
});
EOL
echo "File 'deploy.js' has been created in the 'scripts' folder."
echo -e "${BOLD_PINK} Create By Zona Airdrop https://t.me/ZonaAirdr0p ${RESET_COLOR}"